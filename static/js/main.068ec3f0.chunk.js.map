{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/Chart/Chart.module.css","App.module.css"],"names":["module","exports","Cards","props","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","card","infected","CardContent","Typography","color","gutterBottom","variant","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","modUrl","axios","get","response","modifiedData","fetchDailyData","fetchCountryData","res","countries","map","d","name","Chart","useState","dailyData","setDailyData","useEffect","fetchapi","lineChart","options","responsive","legend","display","scales","xAxes","gridLines","ticks","autoSkip","maxTicksLimit","yAxes","scaleLabel","beginAtZero","callback","labels","date","reportDate","toLocaleString","month","datasets","totalConfirmed","label","borderColor","backgroundColor","pointBorderColor","pointBackgroundColor","pointRadius","borderWidth","total","barChart","title","text","CountryPicker","setCountries","optArray","idx","key","FormControl","formControl","NativeSelect","defaultValue","onChange","event","handleSelectChange","target","App","fetchedData","console","log","setState","state","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.068ec3f0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from \"react\";\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\nimport CountUp from \"react-countup\";\nimport styles from \"./Cards.module.css\";\n\nconst Cards = (props) => {\n\tconst { confirmed, recovered, deaths, lastUpdate } = props.data;\n\tif (!confirmed) {\n\t\treturn \"Loading...\";\n\t}\n\treturn (\n\t\t<div className={styles.container}>\n\t\t\t<Grid container spacing={3} justify=\"center\">\n\t\t\t\t<Grid\n\t\t\t\t\titem\n\t\t\t\t\tcomponent={Card}\n\t\t\t\t\txs={12}\n\t\t\t\t\tmd={3}\n\t\t\t\t\tclassName={[styles.card, styles.infected]}\n\t\t\t\t>\n\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>\n\t\t\t\t\t\t\tInfected\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography variant=\"h5\">\n\t\t\t\t\t\t\t<CountUp\n\t\t\t\t\t\t\t\tend={confirmed.value}\n\t\t\t\t\t\t\t\tduration={1}\n\t\t\t\t\t\t\t\tseparator=\",\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography color=\"textSecondary\">\n\t\t\t\t\t\t\tas on {new Date(lastUpdate).toDateString()}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography variant=\"body2\">\n\t\t\t\t\t\t\tNumber of active COVID-19 cases\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</CardContent>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid\n\t\t\t\t\titem\n\t\t\t\t\tcomponent={Card}\n\t\t\t\t\txs={12}\n\t\t\t\t\tmd={3}\n\t\t\t\t\tclassName={[styles.card, styles.recovered]}\n\t\t\t\t>\n\t\t\t\t\t{\" \"}\n\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>\n\t\t\t\t\t\t\tRecovered\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography variant=\"h5\">\n\t\t\t\t\t\t\t<CountUp\n\t\t\t\t\t\t\t\tend={recovered.value}\n\t\t\t\t\t\t\t\tduration={1}\n\t\t\t\t\t\t\t\tseparator=\",\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography color=\"textSecondary\">\n\t\t\t\t\t\t\tas on {new Date(lastUpdate).toDateString()}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography variant=\"body2\">\n\t\t\t\t\t\t\tNumber of Recovered COVID-19 cases\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</CardContent>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid\n\t\t\t\t\titem\n\t\t\t\t\tcomponent={Card}\n\t\t\t\t\txs={12}\n\t\t\t\t\tmd={3}\n\t\t\t\t\tclassName={[styles.card, styles.deaths]}\n\t\t\t\t>\n\t\t\t\t\t{\" \"}\n\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>\n\t\t\t\t\t\t\tDeaths\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography variant=\"h5\">\n\t\t\t\t\t\t\t<CountUp\n\t\t\t\t\t\t\t\tend={deaths.value}\n\t\t\t\t\t\t\t\tduration={1}\n\t\t\t\t\t\t\t\tseparator=\",\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography color=\"textSecondary\">\n\t\t\t\t\t\t\tas on {new Date(lastUpdate).toDateString()}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography variant=\"body2\">\n\t\t\t\t\t\t\tNumber of deaths due to COVID-19\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</CardContent>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</div>\n\t);\n};\n\nexport default Cards;\n","import axios from \"axios\";\n\nconst url = \"https://covid19.mathdro.id/api\";\n\nexport const fetchData = async (country) => {\n\ttry {\n\t\tlet modUrl = url;\n\t\tif (country && country !== \"Global\") {\n\t\t\tmodUrl = `${url}/countries/${country}`;\n\t\t}\n\t\tconst response = await axios.get(modUrl);\n\t\tconst modifiedData = {\n\t\t\tconfirmed: response.data.confirmed,\n\t\t\trecovered: response.data.recovered,\n\t\t\tdeaths: response.data.deaths,\n\t\t\tlastUpdate: response.data.lastUpdate,\n\t\t};\n\t\treturn modifiedData;\n\t} catch (error) {\n\t\treturn error;\n\t}\n};\n\nexport const fetchDailyData = async () => {\n\ttry {\n\t\tconst response = await axios.get(url + \"/daily\");\n\t\treturn response.data;\n\t} catch (error) {}\n};\n\nexport const fetchCountryData = async () => {\n\ttry {\n\t\tconst res = await axios.get(url + \"/countries\");\n\t\tconst countries = res.data.countries.map((d) => {\n\t\t\treturn d.name;\n\t\t});\n\t\t// console.log(countries);\n\t\treturn countries;\n\t} catch (error) {}\n};\n","import React, { useState, useEffect } from \"react\";\nimport { fetchDailyData } from \"../../api\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport styles from \"./Chart.module.css\";\n\nconst Chart = (props) => {\n\tconst [dailyData, setDailyData] = useState({});\n\n\tuseEffect(() => {\n\t\tconst fetchapi = async () => {\n\t\t\tsetDailyData(await fetchDailyData());\n\t\t};\n\t\tfetchapi();\n\t}, []);\n\n\tconst lineChart =\n\t\tprops.country == \"Global\" && dailyData[0] != null ? (\n\t\t\t<Line\n\t\t\t\toptions={{\n\t\t\t\t\tresponsive: true,\n\t\t\t\t\tlegend: {\n\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t},\n\t\t\t\t\tscales: {\n\t\t\t\t\t\txAxes: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgridLines: {\n\t\t\t\t\t\t\t\t\tdisplay: false,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tticks: {\n\t\t\t\t\t\t\t\t\tautoSkip: true,\n\t\t\t\t\t\t\t\t\tmaxTicksLimit: 12,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tyAxes: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tscaleLabel: {\n\t\t\t\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tticks: {\n\t\t\t\t\t\t\t\t\tbeginAtZero: false,\n\t\t\t\t\t\t\t\t\tcallback: function (value) {\n\t\t\t\t\t\t\t\t\t\tif (value === 0) return \"0\";\n\t\t\t\t\t\t\t\t\t\treturn value / 100000 + \" Lakhs\";\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tgridLines: {\n\t\t\t\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t\t\t\t\tcolor: \"rgba(0,0,0,0.3)\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t}}\n\t\t\t\tdata={{\n\t\t\t\t\tlabels: dailyData.map((data) => {\n\t\t\t\t\t\tlet date = data.reportDate;\n\t\t\t\t\t\tlet dconv = new Date(date);\n\t\t\t\t\t\treturn dconv.toLocaleString(\"en\", {\n\t\t\t\t\t\t\tmonth: \"short\",\n\t\t\t\t\t\t\t// year: true,\n\t\t\t\t\t\t});\n\t\t\t\t\t}),\n\t\t\t\t\tdatasets: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdata: dailyData.map((data) => {\n\t\t\t\t\t\t\t\treturn data.totalConfirmed;\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tlabel: \"Infected\",\n\t\t\t\t\t\t\tborderColor: \"rgba(0,0,255,0.6)\",\n\t\t\t\t\t\t\tbackgroundColor: \"rgba(0,0,255,0.1)\",\n\t\t\t\t\t\t\tpointBorderColor: \"rgba(0,0,0,0)\",\n\t\t\t\t\t\t\tpointBackgroundColor: \"rgba(0,0,0,0)\",\n\t\t\t\t\t\t\tpointRadius: 20,\n\t\t\t\t\t\t\tborderWidth: 3,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdata: dailyData.map((data) => {\n\t\t\t\t\t\t\t\treturn data.deaths.total;\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tlabel: \"Deaths\",\n\t\t\t\t\t\t\tborderColor: \"rgba(255,0,0,0.6)\",\n\t\t\t\t\t\t\tbackgroundColor: \"rgba(255,0,0,0.2)\",\n\t\t\t\t\t\t\tpointBorderColor: \"rgba(0,0,0,0)\",\n\t\t\t\t\t\t\tpointBackgroundColor: \"rgba(0,0,0,0)\",\n\t\t\t\t\t\t\tpointRadius: 20,\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t}}\n\t\t\t/>\n\t\t) : null;\n\n\tconst barChart =\n\t\tprops.country != \"Global\" && props.data.confirmed != null ? (\n\t\t\t<Bar\n\t\t\t\toptions={{\n\t\t\t\t\tlegend: {\n\t\t\t\t\t\tdisplay: false,\n\t\t\t\t\t},\n\t\t\t\t\ttitle: {\n\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t\ttext: `Chart for ${props.country}`,\n\t\t\t\t\t},\n\t\t\t\t\tscales: {\n\t\t\t\t\t\txAxes: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgridLines: false,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tyAxes: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgridLines: false,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t}}\n\t\t\t\tdata={{\n\t\t\t\t\tlabels: [\"Infected\", \"Recovered\", \"Deaths\"],\n\t\t\t\t\tdatasets: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdata: [\n\t\t\t\t\t\t\t\tprops.data.confirmed.value,\n\t\t\t\t\t\t\t\tprops.data.recovered.value,\n\t\t\t\t\t\t\t\tprops.data.deaths.value,\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tbackgroundColor: [\n\t\t\t\t\t\t\t\t\"rgba(0, 0, 255, 0.6)\",\n\t\t\t\t\t\t\t\t\"rgba(0, 255, 0, 0.6)\",\n\t\t\t\t\t\t\t\t\"rgba(255, 0, 0, 0.6)\",\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t}}\n\t\t\t/>\n\t\t) : null;\n\n\treturn (\n\t\t<div className={styles.container}>\n\t\t\t{lineChart}\n\t\t\t{barChart}\n\t\t</div>\n\t);\n};\n\nexport default Chart;\n","import React, { useState, useEffect } from \"react\";\nimport { NativeSelect, FormControl, InputLabel } from \"@material-ui/core\";\nimport styles from \"./CountryPicker.module.css\";\nimport { fetchCountryData } from \"../../api\";\n\nconst CountryPicker = (props) => {\n\tconst [countries, setCountries] = useState([]);\n\n\tuseEffect(() => {\n\t\tconst fetchapi = async () => {\n\t\t\tsetCountries(await fetchCountryData());\n\t\t};\n\t\tfetchapi();\n\t}, []);\n\n\t// console.log(countries);\n\tconst optArray = countries.map((d, idx) => {\n\t\treturn (\n\t\t\t<option key={idx} value={d}>\n\t\t\t\t{d}\n\t\t\t</option>\n\t\t);\n\t});\n\treturn (\n\t\t<FormControl className={styles.formControl}>\n\t\t\t<NativeSelect\n\t\t\t\tdefaultValue=\"Global\"\n\t\t\t\tonChange={(event) => {\n\t\t\t\t\tprops.handleSelectChange(event.target.value);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<option value=\"Global\">Global</option>\n\t\t\t\t{optArray}\n\t\t\t</NativeSelect>\n\t\t</FormControl>\n\t);\n};\n\nexport default CountryPicker;\n","import React from \"react\";\nimport { Chart, Cards, CountryPicker } from \"./components\";\nimport styles from \"./App.module.css\";\nimport { fetchData } from \"./api\";\n//try with this API : https://api.covid19api.com/country/india (later)\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdata: {},\n\t\t\tcountry: \"Global\",\n\t\t};\n\t}\n\n\tasync componentDidMount() {\n\t\tconst fetchedData = await fetchData();\n\t\tthis.setState({ data: fetchedData });\n\t}\n\n\thandleSelectChange = async (country) => {\n\t\tconst fetchedData = await fetchData(country);\n\t\tconsole.log(fetchedData);\n\t\tthis.setState({ data: fetchedData, country: country });\n\t};\n\n\trender() {\n\t\tconst { data, country } = this.state;\n\t\treturn (\n\t\t\t<div className={styles.container}>\n\t\t\t\t<Cards data={data} />\n\t\t\t\t<CountryPicker handleSelectChange={this.handleSelectChange} />\n\t\t\t\t<Chart data={data} country={country} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\"};"],"sourceRoot":""}